(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{304:function(t,s,e){"use strict";e.r(s);var o=e(14),r=Object(o.a)({},(function(){var t=this._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("p",[this._v("使用 toRefs 将 props 中的数据转换为 ref 是合法的，并且不会违反单向数据流。")]),this._v(" "),t("p",[this._v("在 Vue 3 中，toRefs 是一个函数，它接受一个对象作为参数，并返回一个包含该对象所有属性的 ref 对象。这意味着你可以在子组件中使用 toRefs 将父组件的 props 转换为 ref，然后在子组件中更改这些 ref 的值。")]),this._v(" "),t("p",[this._v("在子组件中更改 count.value 的值不会违反单向数据流，因为父组件中的 count 属性没有被修改。当你在子组件中更改 count.value 时，这个变化只会影响到子组件自身，而不会影响到父组件或其它子组件。")]),this._v(" "),t("p",[this._v("因此，使用 toRefs 将 props 中的数据转换为 ref 是安全的，并且不会违反单向数据流。")])])}),[],!1,null,null,null);s.default=r.exports}}]);